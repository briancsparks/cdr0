let username;
let nsRooms;
let roomsJoined = {};
let currRoomName;

username = 'username';
username = username || prompt("What is your username?")

// const socket = io('http://localhost:9000'); // the / namespace/endpoint
const nsSocket = io('/', {
  query: {
    username
  }
});


nsSocket.on('tellRooms', (rooms) => {
  console.log('We have been told room names: ', rooms);
  nsRooms = rooms.nsRooms;

  // Update room list
  let roomList = document.querySelector('.room-list');
  roomList.innerHTML = "";
  nsRooms.forEach((room)=>{
    let glyph = room.privateRoom ? 'lock' : 'globe';
    roomList.innerHTML += `<li class="room"><span class="glyphicon glyphicon-${glyph}"></span>${room.roomTitle}</li>`
  });

  const roomToJoin = nsRooms[0].roomTitle;
  nsSocket.emit('joinRoom', roomToJoin, (err, numClients) => {
    console.log(`joined ${roomToJoin}`, numClients);

    currRoomName = roomToJoin;
    roomsJoined[roomToJoin] = nsRooms[0];
  });
});

nsSocket.on('msgFromRoom', (msg) => {
  console.log(msg);
  const newMsg = buildHTML(msg);
  document.querySelector('#messages').innerHTML += newMsg;
});



document.querySelector('.message-form').addEventListener('submit',formSubmission);



function formSubmission(event){
  event.preventDefault();
  const newMessage = document.querySelector('#user-message').value;
  nsSocket.emit('msgToRoom', currRoomName, {text: newMessage});
}

function buildHTML(msg){
  const convertedDate = new Date(msg.time).toLocaleString();
  const newHTML = `
    <li>
        <div class="user-image">
            <img src="${msg.avatar}" />
        </div>
        <div class="user-message">
            <div class="user-name-time">${msg.username} <span>${convertedDate}</span></div>
            <div class="message-text">${msg.text}</div>
        </div>
    </li>
    `;

  return newHTML;
}


